{"version":3,"sources":["Components/Weather.js","App.js","index.js"],"names":["Weather","sunRiseAndSunSet","timeStamp","Date","getHours","getMinutes","useState","city","setCity","search","setSearch","useEffect","fetch","then","res","ok","Error","json","data","console","log","catch","err","className","type","placeholder","onChange","e","target","value","toUpperCase","sys","country","toLocaleDateString","src","weather","icon","alt","Math","floor","main","temp","description","feels_like","temp_max","temp_min","humidity","coord","lon","lat","wind","speed","deg","sunrise","sunset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MA0HeA,EAvHC,WACd,IAAMC,EAAmB,SAACC,GACxB,MAAM,GAAN,OAAU,IAAIC,KAAiB,IAAZD,GAAkBE,WAArC,cAAqD,IAAID,KAC3C,IAAZD,GACAG,eAEJ,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAqBA,OApBAC,qBAAU,WACRC,MAAM,qDAAD,OACkDH,EADlD,yDAGFI,MAAK,SAACC,GACL,IAAKA,EAAIC,GACP,MAAMC,MAAM,wBAEd,OAAOF,EAAIG,UAEZJ,MAAK,SAACK,GACLC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,uBACZZ,EAAQU,MAETG,OAAM,SAACC,GACNd,EAAQ,WAEX,CAACC,IAGF,sBAAKc,UAAU,aAAf,UACE,6CACA,qBAAKA,UAAU,aAAf,SACE,uBACEC,KAAK,SACLC,YAAY,iBACZF,UAAU,eACVG,SAAU,SAACC,GACTjB,EAAUiB,EAAEC,OAAOC,YAIvBtB,EAGA,gCACE,sBAAKgB,UAAU,eAAf,UACE,qBAAIA,UAAU,eAAd,UACGd,EAAOqB,cADV,IAC0BvB,EAAKwB,IAAIC,WAEnC,yCAAW,IAAI7B,MAAO8B,2BAExB,sBAAKV,UAAU,kBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,qBACEW,IAAG,+CAA0C3B,EAAK4B,QAAQ,GAAGC,MAC7DC,IAAI,QACJd,UAAU,YAGd,sBAAKA,UAAU,6BAAf,UACE,qBAAIA,UAAU,aAAd,UAA4Be,KAAKC,MAAMhC,EAAKiC,KAAKC,MAAjD,WACA,oBAAIlB,UAAU,sBAAd,SACGhB,EAAK4B,QAAQ,GAAGO,oBAIvB,sBAAKnB,UAAU,qBAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,+BAAKe,KAAKC,MAAMhC,EAAKiC,KAAKG,YAA1B,WACA,+CAEF,sBAAKpB,UAAU,+BAAf,UACE,+BAAKe,KAAKC,MAAMhC,EAAKiC,KAAKI,UAA1B,WACA,8CAEF,sBAAKrB,UAAU,+BAAf,UACE,+BAAKe,KAAKC,MAAMhC,EAAKiC,KAAKK,UAA1B,WACA,8CAEF,sBAAKtB,UAAU,+BAAf,UACE,6BAAKe,KAAKC,MAAMhC,EAAKiC,KAAKM,YAC1B,mDAIN,oBAAIvB,UAAU,gBAAd,2BACA,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,6BAAKhB,EAAKwC,MAAMC,MAChB,+CAEF,sBAAKzB,UAAU,4BAAf,UACE,6BAAKhB,EAAKwC,MAAME,MAChB,8CAEF,sBAAK1B,UAAU,4BAAf,UACE,+BAAKhB,EAAK2C,KAAKC,MAAf,UACA,gDAEF,sBAAK5B,UAAU,4BAAf,UACE,6BAAKhB,EAAK2C,KAAKE,MACf,4CAEF,sBAAK7B,UAAU,4BAAf,UACE,6BAAKtB,EAAiBM,EAAKwB,IAAIsB,WAC/B,6CAEF,sBAAK9B,UAAU,4BAAf,UACE,6BAAKtB,EAAiBM,EAAKwB,IAAIuB,UAC/B,mDApEN,6DChCOC,EAVH,WACV,OACE,8BACE,8BACE,cAAC,EAAD,SCFRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.8db5e594.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Weather.css\";\r\nimport { useState, useEffect } from \"react\";\r\nconst Weather = () => {\r\n  const sunRiseAndSunSet = (timeStamp) => {\r\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(\r\n      timeStamp * 1000\r\n    ).getMinutes()}`;\r\n  };\r\n  const [city, setCity] = useState(null);\r\n  const [search, setSearch] = useState(\"\");\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&APPID=e42246c73b82267b7b4bfae7cfe08991`\r\n    )\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw Error(\"Could not fetch data\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        console.log(\"Data has been fetch\");\r\n        setCity(data);\r\n      })\r\n      .catch((err) => {\r\n        setCity(null);\r\n      });\r\n  }, [search]);\r\n\r\n  return (\r\n    <div className=\"parent-box\">\r\n      <h2>Weather App</h2>\r\n      <div className=\"search-box\">\r\n        <input\r\n          type=\"search\"\r\n          placeholder=\"Enter the city\"\r\n          className=\"search-input\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      {!city ? (\r\n        <p>This city doesn't exist.</p>\r\n      ) : (\r\n        <div>\r\n          <div className=\"location-box\">\r\n            <h1 className=\"country-name\">\r\n              {search.toUpperCase()}-{city.sys.country}\r\n            </h1>\r\n            <h2>Date: {new Date().toLocaleDateString()}</h2>\r\n          </div>\r\n          <div className=\"temp-parent-box\">\r\n            <div className=\"main-tempreture-box\">\r\n              <div className=\"main-tempreture-child-box1\">\r\n                <img\r\n                  src={`https://api.openweathermap.org/img/w/${city.weather[0].icon}`}\r\n                  alt=\"icons\"\r\n                  className=\"icons\"\r\n                />\r\n              </div>\r\n              <div className=\"main-tempreture-child-box2\">\r\n                <h1 className=\"tempreture\">{Math.floor(city.main.temp)}째C</h1>\r\n                <h2 className=\"weather-description\">\r\n                  {city.weather[0].description}\r\n                </h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"tempreture-details\">\r\n              <div className=\"tempreture-details-child-box\">\r\n                <h2>{Math.floor(city.main.feels_like)}째C</h2>\r\n                <h2>Feels Like</h2>\r\n              </div>\r\n              <div className=\"tempreture-details-child-box\">\r\n                <h2>{Math.floor(city.main.temp_max)}째C</h2>\r\n                <h2>Max Temp </h2>\r\n              </div>\r\n              <div className=\"tempreture-details-child-box\">\r\n                <h2>{Math.floor(city.main.temp_min)}째C</h2>\r\n                <h2>Min Temp </h2>\r\n              </div>\r\n              <div className=\"tempreture-details-child-box\">\r\n                <h2>{Math.floor(city.main.humidity)}</h2>\r\n                <h2>Humidity</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h3 className=\"other-details\">Other details</h3>\r\n          <div className=\"other-details-box\">\r\n            <div className=\"other-details-child-boxes\">\r\n              <h2>{city.coord.lon}</h2>\r\n              <h2>Longtitude</h2>\r\n            </div>\r\n            <div className=\"other-details-child-boxes\">\r\n              <h2>{city.coord.lat}</h2>\r\n              <h2>Latitude </h2>\r\n            </div>\r\n            <div className=\"other-details-child-boxes\">\r\n              <h2>{city.wind.speed} mph</h2>\r\n              <h2>Wind Speed </h2>\r\n            </div>\r\n            <div className=\"other-details-child-boxes\">\r\n              <h2>{city.wind.deg}</h2>\r\n              <h2>Degree </h2>\r\n            </div>\r\n            <div className=\"other-details-child-boxes\">\r\n              <h2>{sunRiseAndSunSet(city.sys.sunrise)}</h2>\r\n              <h2>Sun Rise</h2>\r\n            </div>\r\n            <div className=\"other-details-child-boxes\">\r\n              <h2>{sunRiseAndSunSet(city.sys.sunset)}</h2>\r\n              <h2>Sun Set </h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React from \"react\";\n\nimport Weather from \"./Components/Weather\";\nconst App = () => {\n  return (\n    <div>\n      <div>\n        <Weather />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}